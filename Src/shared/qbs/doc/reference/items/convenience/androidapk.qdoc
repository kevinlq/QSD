/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
    \contentspage list-of-convenience-items.html
    \nextpage AppleApplicationDiskImage
    \qmltype AndroidApk
    \inherits Product
    \inqmlmodule QbsConvenienceItems
    \ingroup list-of-items
    \keyword QML.AndroidApk

    \brief Android application package.

    An AndroidApk item is a \l{Product}{product} of the \l{Product::}{type}
    \c android.apk that has a \l{Depends}{dependency} on the \l{Android.sdk}
    module. The final build result is an Android application package (APK) file.

    Here is what the project file could look like for the BasicMediaDecoder
    example that comes with the Android SDK:

    \code
        import qbs

        AndroidApk {
            name: "Basic Media Decoder"
            packageName: "com.example.android.basicmediadecoder"

            property string sourcesPrefix: "Application/src/main/"

            resourcesDir: sourcesPrefix + "/res"
            sourcesDir: sourcesPrefix + "/java"
            manifestFile: sourcesPrefix + "/AndroidManifest.xml"
        }
    \endcode
*/

/*!
    \qmlproperty path AndroidApk::assetsDir

    The base directory for Android assets.

    \note Android requires that the file name of this directory is always
    \c "assets".

    \defaultvalue \c "assets"
*/

/*!
    \qmlproperty bool AndroidApk::automaticSources

    If \c true, Java sources as well as Android resources, assets, and the
    manifest file will be automatically included in the product via wildcards.
    Set this property to \c false if you want to specify these files manually.

    \defaultvalue \c true
*/

/*!
    \qmlproperty path AndroidApk::manifestFile

    The file path to the Android manifest file.

    \note Android requires that the file name is always "AndroidManifest.xml".

    \defaultvalue \c "AndroidManifest.xml"
*/

/*!
    \qmlproperty string AndroidApk::packageName

    The package name as given in the manifest file.

    \defaultvalue \c name
*/

/*!
    \qmlproperty path AndroidApk::resourcesDir

    The base directory for Android resources.

    \note Android requires that the file name of this directory is always
    \c "res".

    \defaultvalue \c "res"
*/

/*!
    \qmlproperty path AndroidApk::sourcesDir

    The base directory for Java sources. This property is only relevant if
    \l automaticSources is enabled.

    \defaultvalue \c "src"
*/
